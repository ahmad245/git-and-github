command line
pwd :current path
mkdir :for create folder 
touch :for create file 
rm -rf name of folder : remove folder and files -rf recurcevly
rm name of file : remove file 
ls 
ls -al
cat file name : edit file 


//gitHub basic  Starting with Existing Project
git init 
git status 
git add fileName or *
git  git commit -m "name of commit"

// commit Details
git log : for show Commit Details : id of commit , Author and Date
git show show Commit Details : id of commit , Author , Date and all changes 

// files tracks
git status :  all files that  modified or created  and untrack files
git ls-files : if I do not add  file to stage earia will show  all files tracks but  not the new file was created

// Backing Out Changes unstage
git reset file name 
git reset HEAD file name

// remove modified from file in local 
git checkout -- file name

// alias
git config --global alias.status "st" 
git congig --global --list all the alias and config global

// rename file
git mv fileName1 fileName2

// remove file
git rm file name

//027 Excluding Unwanted Files
touch .gitignore 
and write the name of file Unwanted to tracks
*.log Unwanted all file with .log

// history 
git log --oneline --graph --decorate --all

// difference  between the recently changes in working directory  and the HEAD position , HEAD :last commit in the branch 
git diff

//branch
git branch 
git checkout -b name of new branch

// merge
git checkout master 
git merge new branch

// delete branch after merge 
git branch -d new branch

//Saving Work in Progress with Stashing
git stash 
git stash list // 
git stash save "message" // save stash with the name 
git stash pop // remove the latest stash and retrun it 
git stash pop stash@{index} ://remove the  stash with index  and retrun it   ex:git stash pop stash@{0}
git stash apply // return the latest  stash without remove id 
git stash drop // remove the latest stash 
git stash drop stash@{index} // remove the  stash with index  ex:git stash drop stash@{0}
git stash show : for show the latest stash 


